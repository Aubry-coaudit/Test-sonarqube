name: Analyse SonarQube

on:
  pull_request:
    branches:
      - main

# concurrency:
#   group: sonar-${{ github.ref }}
#   cancel-in-progress: true

jobs:
  sonar:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    environment: env
    # timeout-minutes: 20

    permissions:
      contents: read
      # (Si tu as Developer+ et actives la PR decoration via GitHub App, tu peux donner pull-requests: write)

    env:
      SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Java est requis même si ton projet n'est pas Java (scanner CLI tourne sur JVM)
      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Cache Sonar packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: sonar-${{ runner.os }}-${{ hashFiles('**/*.java','**/*.js','**/*.ts','**/*.php','**/*.cs','**/*.py','**/*.go','**/*.xml') }}
          restore-keys: |
            sonar-${{ runner.os }}-

      # (Facultatif) Étape build & tests & coverage selon ta techno
      # - run: mvn -B -DskipITs=true clean verify
      # - run: npm ci && npm test -- --coverage
      # - run: ./vendor/bin/phpunit --coverage-clover build/logs/clover.xml

      - name: Debug SONAR_HOST_URL
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          echo "SONAR_HOST_URL=>>${SONAR_HOST_URL}<<"
          printf "%s" "${SONAR_HOST_URL}" | hexdump -C | tail -n+1

      - name: Preflight /batch/index
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          set -euo pipefail
          sudo apt-get update && sudo apt-get install -y jq curl
          echo "HEAD ${SONAR_HOST_URL}/batch/index"
          curl -I "${SONAR_HOST_URL}/batch/index"
          echo "Status API:"
          curl -s "${SONAR_HOST_URL}/api/system/status" | jq .

      - name: SonarQube Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        uses: SonarSource/sonarqube-scan-action@v4
        
        with:
          args: >
            -Dsonar.projectKey=sonar-test
            -Dsonar.projectName=Test SonarQube depuis GitHub
            -Dsonar.sources=.
            -Dsonar.exclusions=**/vendor/**,**/node_modules/**,**/dist/**,**/build/**
            # Exemple couverture (à adapter) :
            # -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            # -Dsonar.php.coverage.reportPaths=build/logs/clover.xml
            # -Dsonar.coverage.jacoco.xmlReportPaths=**/target/site/jacoco/jacoco.xml

      - name: SonarQube Quality Gate
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        uses: SonarSource/sonarqube-quality-gate-action@v1
        